#include <bits/stdc++.h>
using namespace std;

int n, a[20];
int target_sum; // to store the target sum
int cnt; // to store the count of subsequences

// Recursive function to count subsequences that sum to the target
void count_subsequences(int index, int current_sum) {

  if (index == n) {
    // Base case: Reached the end of the array
    // Check if the current sum matches the target sum
    if (current_sum == target_sum) {
      cnt++;  // Increment the count
    }
    return;
  }

  // Recursive calls for two cases:
  // 1. Include the current element in the sum
  count_subsequences(index + 1, current_sum + a[index]);

  // 2. Exclude the current element from the sum
  count_subsequences(index + 1, current_sum);
}

int main() {

  // Initialize the array with values
  a[0] = 1;
  a[1] = 2;
  a[2] = 3;
  a[3] = 4;
  n = 4;            // Set the size of the array
  target_sum = 5;   // Set the target sum
  cnt = 0;        // Initialize the count of subsequences

  // Call the recursive function to count subsequences with the target sum
  count_subsequences(0, 0);

  cout << "Number of subsequences with sum " << target_sum << ": " << cnt << endl;

  return 0;
}
