 
///   Find the pair whose sum is equal to x    (two pointer methods)





#include<bits/stdc++.h>
using namespace std;




int main(){
     
      int n;
      cin >> n;
      
      vector<int>a(n);
      
      
      for(auto &u : a)cin>> u;
      
      sort(a.begin(),a.end());
      
      int val;
      cin >> val;
      int i = 0, j = n - 1;
      bool ok = false;
      while(i < j){
           
           int sum = a[i]  + a[j];
           
           
           if(sum == val) ok = true;
           if(sum > val) j--;
           else i++;
      }
    
     cout << ((ok) ? "YES" : "NO") << '\n';
    return 0;
}













/// jodi value 2tah print korte bole taile --> 



///   Find the pair whose sum is equal to x    (two pointer methods)



#include<bits/stdc++.h>
using namespace std;




int main(){
     
      int n;
      cin >> n;
      int val1, val2;
      vector<int>a(n);
      
      
      for(auto &u : a)cin>> u;
      
      sort(a.begin(),a.end());
      
      int val;
      cin >> val;
      int i = 0, j = n - 1;
      bool ok = false;
      while(i < j){
           
           int sum = a[i]  + a[j];
           
           
           if(sum == val){
               val1 = a[i];
               val2 = a[j];
               ok = true;
           } 
           if(sum > val) j--;
           else i++;
      }
      
      /// value 2tah print korte hole
      
      if(ok ){
          cout << val1 << ' ' << val2 << '\n';
      }
    
     //cout << ((ok) ? "YES" : "NO") << '\n';
    return 0;
}





///   Find the pair in Array Whose sum is closest to X    (two pointer methods)





#include<bits/stdc++.h>
using namespace std;




int main(){
     
      int n;
      cin >> n;
      int val1, val2;
      vector<int>a(n);
      
      
      for(auto &u : a)cin>> u;
      
      sort(a.begin(),a.end());
      
      int val;
      cin >> val;
      int i = 0, j = n - 1;
      bool ok = false;
      int diff = INT_MAX;
      while(i < j){
           
           int sum = a[i]  + a[j];
           
           
           if(abs(sum - val) < diff){
               val1 = i;
               val2 = j;
              diff = abs(sum - val);
           } 
           if(sum > val) j--;
           else i++;
      }
      
      /// value 2tah print korte hole
      
     // int x =  a[val1];
    //  int y = a[val2];
      
      //int fsum = x + y;
          cout <<   "(" << a[val1] << ' ' << a[val2] << ")" << "  =>  " << a[val1] +  a[val2]  << '\n';
      
    
     //cout << ((ok) ? "YES" : "NO") << '\n';
    return 0;
}



Find the closest pair from two sorted arrays    (two pointer methods)



#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int br[], int n,int m, int x)
{
    int ind1,ind2,l,r;
    l=0;
    r=m-1;
    int dif=INT_MAX;
    while(l<n && r>=0)
    {
        int sum=ar[l]+br[r];
        if(abs(sum-x)<dif)
        {
            ind1=l;
            ind2=r;
            dif=abs(sum-x);
        }
        if(sum>x)r--;
        else l++;
    }
    cout<<"( "<<ar[ind1]<<" , "<<br[ind2]<<" ) = "<<ar[ind1]+br[ind2]<<endl;
}
int main()
{
    int n,m,x;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];

    cin>>m;
    int br[m+3];
    for(int i=0;i<m;i++)cin>>br[i];

    cin>>x;

    solve(ar,br,n,m,x);
}



///Find all triplets with zero sum |



#include<bits/stdc++.h>
using namespace std;

int main(){

       int n;
       cin >> n;

       vector<int>a(n);

       for(auto &u : a)cin >> u;


       for(int i = 0; i < n;i++){
          unordered_set<int>s;
           for(int j = i + 1; j < n; j++){
                int x = - ( a[i] + a[j]);
                if(s.find(x) != s.end()){
                     cout << x << ' ' << a[i] << ' ' << a[j] << ' \n';
                }
                else{
                     s.insert(a[j]);
                }
           }
       }





return 0;

}




/// Find a triplet that sum to a given value

#include<bits/stdc++.h>
using namespace std;

int main(){

       int n;
       cin >> n;

       vector<int>a(n);

       for(auto &u : a)cin >> u;
       sort(a.begin(), a.end());
      int x;
      cin >> x;

       for(int i = 0; i < n;i++){
          int l =  i + 1;
          int r = n - 1;

          while(l <  r){
              int sum = a[i] + a[l] + a[r];

              if(sum == x){
                 cout << a[i] << ' ' << a[l] << ' ' << a[r] << '\n';
              }

              if(sum > x) r--;
              else l++;
          }

       }




return 0;

}



///  Find four elements that sum to a given value

#include<bits/stdc++.h>
using namespace std;

int main(){

       int n;
       cin >> n;

       vector<int>a(n);

       for(auto &u : a)cin >> u;
       sort(a.begin(), a.end());
      int x;
      cin >> x;

       for(int i = 0; i < n;i++){
         for(int j = i+ 1; j < n;j++){
          int l =  j + 1;
          int r = n - 1;

          while(l <  r){
              int sum = a[i] + a[j] + a[l] + a[r];

              if(sum == x){
                 cout << a[i] << ' ' << a[j] << ' ' << a[l] << ' ' << a[r]   << '\n';
              }

              if(sum > x) r--;
              else l++;
          }
       }
       }




return 0;

}


