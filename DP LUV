#include<bits/stdc++.h>
using namespace std;

/// Basic DP
 /// fibonacci

 const int mx = 1e5 + 123;

 int dp[mx];

/// Top down approach -- line(12-22)
 int fib(int n){

    if(n == 0) return 0;

    if(n == 1) return 1;

    if(dp[n] != -1) return dp[n];

    return dp[n] = fib(n -1) + fib(n - 2);

 }

int32_t main(){


   memset(dp, -1 , sizeof(dp));

   int n;
   cin >> n;
   
   /// Bottom Up approach ---> line(33- 40)
   
 dp[0] = 0;
 
 dp[1]  = 1;  
   
   for(int i = 2; i <= n; i++){
    dp[i] = dp[i-1] + dp[i-2];
   }
   
   cout << fib(n) << endl;






  return 0;
}
